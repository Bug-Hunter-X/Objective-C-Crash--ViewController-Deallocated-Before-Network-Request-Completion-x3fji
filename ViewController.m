In Objective-C, a common yet subtle issue arises when dealing with memory management and object lifecycles, especially when using delegates or blocks.  Consider this scenario: a view controller (ViewController) creates a network request manager (NetworkManager) object. The NetworkManager uses a delegate protocol to communicate back to ViewController when the network request completes.  If ViewController is deallocated before the network request finishes, and the NetworkManager still holds a strong reference to the ViewController (through its delegate property), a crash can occur when NetworkManager attempts to send a message to a deallocated ViewController. This is because the ViewController's memory has been freed, and trying to access its methods or properties will lead to a runtime exception.